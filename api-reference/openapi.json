{
  "openapi": "3.0.0",
  "info": {
    "title": "TeamMove API",
    "version": "1.0.0",
    "description": "TeamMove API documentation with OpenAPI 3.0"
  },
  "servers": [
    {
      "url": "http://localhost:8099",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Company import by Excel",
      "description": "API for managing company data"
    },
    {
      "name": "VoIP",
      "description": "API for managing VoIP calls"
    },
    {
      "name": "VoIP Dashboard",
      "description": "API for VoIP dashboards"
    },
    {
      "name": "Twilio Webhook",
      "description": "API for Twilio webhooks"
    }
  ],
  "paths": {
    "/checklist-export-ppt": {
      "get": {
        "tags": [
          "Checklist"
        ],
        "summary": "Exporta o checklist em formato PPT",
        "description": "Endpoint para exportar os dados do checklist em formato PPT.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialDate",
            "in": "query",
            "description": "Data inicial para o filtro do checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "finalDate",
            "in": "query",
            "description": "Data final para o filtro do checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Lista de IDs de usuários para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Lista de IDs de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "101,102"
            }
          },
          {
            "name": "companyTypeId",
            "in": "query",
            "description": "Lista de IDs de tipos de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "201,202"
            }
          },
          {
            "name": "companyAggregator",
            "in": "query",
            "description": "Lista de IDs de agregadores de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "301,302"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número máximo de itens a serem retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordenação dos itens retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "getPictures",
            "in": "query",
            "description": "Indica se as imagens associadas aos checklists devem ser retornadas",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Lista de status para o filtro",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Pendente, Aprovado, Reprovado"
            }
          },
          {
            "name": "activityType",
            "in": "query",
            "description": "Lista de tipos de atividades para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist exportado com sucesso em formato PPT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checklist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "idCheckList": {
                            "type": "integer"
                          },
                          "nomeReduzido": {
                            "type": "string"
                          },
                          "nomeEmpresa": {
                            "type": "string"
                          },
                          "logoEmpresa": {
                            "type": "string"
                          },
                          "cidade": {
                            "type": "string"
                          },
                          "estado": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "endereco": {
                            "type": "string"
                          },
                          "cep": {
                            "type": "string"
                          },
                          "nomeTarefa": {
                            "type": "string"
                          },
                          "nomeUsuario": {
                            "type": "string"
                          },
                          "dataFinalizacaoPrevista": {
                            "type": "string",
                            "format": "date"
                          },
                          "nomeCampanha": {
                            "type": "string"
                          },
                          "fotoUsuario": {
                            "type": "string"
                          },
                          "fotos": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                },
                                "tag": {
                                  "type": "string"
                                },
                                "pergunta": {
                                  "type": "string"
                                },
                                "idChecklist": {
                                  "type": "integer"
                                },
                                "dataHora": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida. Algum dos parâmetros está faltando ou é inválido."
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/company-delinquency": {
      "get": {
        "tags": [
          "Checklist"
        ],
        "summary": "Exporta o checklist em formato PPT",
        "description": "Endpoint para exportar os dados do checklist em formato PPT.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialDate",
            "in": "query",
            "description": "Data inicial para o filtro do checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "finalDate",
            "in": "query",
            "description": "Data final para o filtro do checklist",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Lista de IDs de usuários para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2,3"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Lista de IDs de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "101,102"
            }
          },
          {
            "name": "companyTypeId",
            "in": "query",
            "description": "Lista de IDs de tipos de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "201,202"
            }
          },
          {
            "name": "companyAggregator",
            "in": "query",
            "description": "Lista de IDs de agregadores de empresas para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "301,302"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número máximo de itens a serem retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordenação dos itens retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "getPictures",
            "in": "query",
            "description": "Indica se as imagens associadas aos checklists devem ser retornadas",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Lista de status para o filtro",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Pendente, Aprovado, Reprovado"
            }
          },
          {
            "name": "activityType",
            "in": "query",
            "description": "Lista de tipos de atividades para o filtro",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1,2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist exportado com sucesso em formato PPT",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checklist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "idCheckList": {
                            "type": "integer"
                          },
                          "nomeReduzido": {
                            "type": "string"
                          },
                          "nomeEmpresa": {
                            "type": "string"
                          },
                          "logoEmpresa": {
                            "type": "string"
                          },
                          "cidade": {
                            "type": "string"
                          },
                          "estado": {
                            "type": "string"
                          },
                          "bairro": {
                            "type": "string"
                          },
                          "endereco": {
                            "type": "string"
                          },
                          "cep": {
                            "type": "string"
                          },
                          "nomeTarefa": {
                            "type": "string"
                          },
                          "nomeUsuario": {
                            "type": "string"
                          },
                          "dataFinalizacaoPrevista": {
                            "type": "string",
                            "format": "date"
                          },
                          "nomeCampanha": {
                            "type": "string"
                          },
                          "fotoUsuario": {
                            "type": "string"
                          },
                          "fotos": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                },
                                "tag": {
                                  "type": "string"
                                },
                                "pergunta": {
                                  "type": "string"
                                },
                                "idChecklist": {
                                  "type": "integer"
                                },
                                "dataHora": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida. Algum dos parâmetros está faltando ou é inválido."
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/company/template": {
      "get": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Obtém o template da empresa",
        "description": "Endpoint para obter o template de dados da empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Template da empresa obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "template": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "template": {

                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao obter o template da empresa"
          }
        }
      }
    },
    "/company/": {
      "get": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Obtém valores validados",
        "description": "Endpoint para obter valores validados de uma empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Valores validados obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                },
                "example": {
                  "values": []
                }
              }
            }
          },
          "400": {
            "description": "Erro ao obter valores validados"
          }
        }
      }
    },
    "/company": {
      "post": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Salva um arquivo de importação",
        "description": "Endpoint para salvar um arquivo de importação de dados da empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Arquivo de importação salvo com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indica se a operação foi bem-sucedida"
                    },
                    "message": {
                      "type": "string",
                      "description": "Mensagem de sucesso ou erro"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Arquivo salvo com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao salvar o arquivo de importação"
          }
        }
      }
    },
    "/company/{importationId}": {
      "post": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Salva valores na empresa",
        "description": "Endpoint para salvar valores importados na empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "importationId",
            "in": "path",
            "description": "ID da importação para salvar os valores",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "values": []
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valores salvos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Valores salvos com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao salvar valores"
          }
        }
      },
      "delete": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Deleta uma importação",
        "description": "Endpoint para deletar uma importação baseada no ID fornecido.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "importationId",
            "in": "path",
            "description": "ID da importação a ser deletada",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Importação deletada com sucesso"
          },
          "400": {
            "description": "Falta o parâmetro importationId"
          },
          "500": {
            "description": "Erro ao deletar a importação"
          }
        }
      }
    },
    "/company/relationship": {
      "put": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Atualiza relacionamentos de colunas",
        "description": "Endpoint para atualizar relacionamentos entre colunas na empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "relationships": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "relationships": []
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Relacionamentos atualizados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Relacionamentos atualizados com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao atualizar relacionamentos"
          }
        }
      }
    },
    "/company/values": {
      "put": {
        "tags": [
          "Company import by Excel"
        ],
        "summary": "Atualiza valores da empresa",
        "description": "Endpoint para atualizar valores específicos da empresa.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "values": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "values": []
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Valores atualizados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Valores atualizados com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao atualizar valores"
          }
        }
      }
    },
    "/getVoiceToken": {
      "get": {
        "tags": [
          "Configurações de Chamadas"
        ],
        "summary": "Obtém token de autenticação para chamadas",
        "description": "Endpoint para obter token de autenticação necessário para realizar chamadas VoIP.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token obtido com sucesso"
          },
          "401": {
            "description": "Falha na autenticação"
          }
        }
      }
    },
    "/callConfig": {
      "get": {
        "tags": [
          "Configurações de Chamadas"
        ],
        "summary": "Obtém configurações de chamadas",
        "description": "Endpoint para obter as configurações iniciais das chamadas VoIP.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configurações obtidas com sucesso"
          },
          "404": {
            "description": "Configurações não encontradas"
          }
        }
      }
    },
    "/save/config": {
      "post": {
        "tags": [
          "Configurações de Chamadas"
        ],
        "summary": "Salva configurações de chamadas",
        "description": "Endpoint para salvar novas configurações para chamadas VoIP.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configurações salvas com sucesso"
          },
          "400": {
            "description": "Erro ao salvar configurações"
          }
        }
      }
    },
    "/callDetail": {
      "get": {
        "tags": [
          "VoIP"
        ],
        "summary": "Obtém detalhes do registro da chamada",
        "description": "Endpoint para obter os detalhes de um registro de chamada específico.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "ID do registro da chamada para obter detalhes",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do registro da chamada obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "id": "record_123",
                  "details": {

                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao obter os detalhes do registro da chamada"
          }
        }
      }
    },
    "/save/detail": {
      "post": {
        "tags": [
          "Twilio Webhook"
        ],
        "summary": "Salva detalhes do registro",
        "description": "Endpoint para salvar detalhes de um registro de chamada.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "details": {
                    "type": "object"
                  }
                },
                "example": {
                  "id": "record_123",
                  "details": {

                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detalhes do registro salvos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Detalhes salvos com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao salvar detalhes do registro"
          }
        }
      }
    },
    "/dashCallDetail": {
      "get": {
        "tags": [
          "VoIP Dashboard"
        ],
        "summary": "Obtém detalhes do dashboard de chamadas",
        "description": "Endpoint para obter detalhes do dashboard de chamadas.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do dashboard de chamadas obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dashboard": {
                      "type": "object"
                    }
                  }
                },
                "example": {
                  "dashboard": {

                  }
                }
              }
            }
          },
          "400": {
            "description": "Erro ao obter detalhes do dashboard de chamadas"
          }
        }
      }
    },
    "/update/callNotes/{id}": {
      "put": {
        "tags": [
          "VoIP"
        ],
        "summary": "Atualiza notas da chamada",
        "description": "Endpoint para atualizar as notas de uma chamada específica.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID da chamada para atualizar notas",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "notes": {
                    "type": "string"
                  }
                },
                "example": {
                  "notes": "Notas atualizadas para a chamada"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notas atualizadas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Notas atualizadas com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao atualizar notas da chamada"
          }
        }
      }
    },
    "/recordOptions": {
      "get": {
        "tags": [
          "VoIP"
        ],
        "summary": "Obtém as opções de gravação",
        "description": "Endpoint para obter as opções de gravação disponíveis.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opções de gravação obtidas com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "options": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "options": [
                    {
                      "id": "option1",
                      "name": "Option 1"
                    },
                    {
                      "id": "option2",
                      "name": "Option 2"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Erro ao obter opções de gravação"
          }
        }
      }
    },
    "/save/recordOptions": {
      "post": {
        "tags": [
          "VoIP"
        ],
        "summary": "Salva uma nova opção de gravação",
        "description": "Endpoint para salvar uma nova opção de gravação.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "example": {
                  "id": "newOption",
                  "name": "New Option"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Opção de gravação salva com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Opção salva com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao salvar a opção de gravação"
          }
        }
      }
    },
    "/save/record": {
      "post": {
        "tags": [
          "Twilio Webhook"
        ],
        "summary": "Inicia uma chamada de voz",
        "description": "Endpoint para iniciar uma nova chamada de voz.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phoneNumber": {
                    "type": "string"
                  },
                  "callType": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  }
                },
                "required": [
                  "phoneNumber",
                  "callType",
                  "userId"
                ]
              },
              "example": {
                "phoneNumber": "1234567890",
                "callType": "outbound",
                "userId": "user_123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chamada iniciada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Chamada iniciada"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao iniciar a chamada"
          }
        }
      }
    },
    "/finish": {
      "put": {
        "tags": [
          "VoIP"
        ],
        "summary": "Finaliza uma atividade de chamada",
        "description": "Endpoint para finalizar uma chamada de voz existente.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callSid": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "required": [
                  "callSid",
                  "status"
                ]
              },
              "example": {
                "callSid": "CA1234567890abcdef",
                "status": "completed"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chamada finalizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Chamada finalizada"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao finalizar a chamada"
          }
        }
      }
    },
    "/call/detail": {
      "get": {
        "tags": [
          "VoIP"
        ],
        "summary": "Obtém detalhes da chamada",
        "description": "Endpoint para obter os detalhes de uma chamada específica.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callSid",
            "in": "query",
            "description": "SID da chamada para buscar os detalhes",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da chamada obtidos com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "callSid": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "callSid": "CA1234567890abcdef",
                  "duration": "5:00",
                  "status": "completed"
                }
              }
            }
          },
          "404": {
            "description": "Chamada não encontrada"
          }
        }
      }
    },
    "/dashCall": {
      "get": {
        "tags": [
          "VoIP Dashboard"
        ],
        "summary": "Obtém o dashboard das chamadas",
        "description": "Endpoint para obter um dashboard com as informações das chamadas.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard de chamadas obtido com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalCalls": {
                      "type": "number"
                    },
                    "activeCalls": {
                      "type": "number"
                    },
                    "completedCalls": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "totalCalls": 50,
                  "activeCalls": 5,
                  "completedCalls": 45
                }
              }
            }
          },
          "500": {
            "description": "Erro ao obter o dashboard de chamadas"
          }
        }
      }
    },
    "/save-call": {
      "post": {
        "tags": [
          "Twilio Webhook"
        ],
        "summary": "Salva o registro da chamada",
        "description": "Endpoint para salvar o registro de uma chamada.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "callSid": {
                    "type": "string"
                  },
                  "recordingUrl": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "string"
                  }
                },
                "required": [
                  "callSid",
                  "recordingUrl",
                  "duration"
                ]
              },
              "example": {
                "callSid": "CA1234567890abcdef",
                "recordingUrl": "http://example.com/recording.mp3",
                "duration": "5:00"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registro da chamada salvo com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "success": true,
                  "message": "Registro salvo com sucesso"
                }
              }
            }
          },
          "400": {
            "description": "Erro ao salvar o registro da chamada"
          }
        }
      }
    },
    "/activityGoal": {
      "get": {
        "summary": "Obtém metas de atividades",
        "description": "Rota para obter metas de atividades do sistema.",
        "tags": [
          "Metas de Atividades"
        ]
      },
      "put": {
        "summary": "Salva metas de atividades",
        "description": "Rota para salvar metas de atividades no sistema.",
        "tags": [
          "Metas de Atividades"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "goalId": {
                    "type": "string"
                  },
                  "goalName": {
                    "type": "string"
                  }
                },
                "required": [
                  "goalId",
                  "goalName"
                ]
              }
            }
          }
        }
      }
    },
    "/activityGoal/checkIfAny": {
      "get": {
        "summary": "Verifica se há alguma meta",
        "description": "Rota para verificar se há alguma meta no sistema.",
        "tags": [
          "Metas de Atividades"
        ]
      }
    },
    "/activityGoal/activityKindsAndGroups": {
      "put": {
        "summary": "Atualiza tipos e grupos de atividades",
        "description": "Rota para atualizar tipos e grupos de atividades no sistema.",
        "tags": [
          "Metas de Atividades"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "activityKindId": {
                    "type": "string"
                  },
                  "groupName": {
                    "type": "string"
                  }
                },
                "required": [
                  "activityKindId",
                  "groupName"
                ]
              }
            }
          }
        }
      }
    },
    "/activityGoal/dash/users": {
      "get": {
        "summary": "Obtém lista de usuários",
        "description": "Rota para obter a lista de usuários do sistema.",
        "tags": [
          "Metas de Atividades"
        ]
      }
    },
    "/activityGoal/dash/activitiesKinds": {
      "get": {
        "summary": "Obtém tipos de atividades",
        "description": "Rota para obter a lista de tipos de atividades do sistema.",
        "tags": [
          "Metas de Atividades"
        ]
      }
    },
    "/activityGoal/dash/dailyMissions": {
      "get": {
        "summary": "Obtém metas diárias de atividades",
        "description": "Rota para obter as metas diárias de atividades do sistema.",
        "tags": [
          "Metas de Atividades"
        ]
      }
    },
    "/activityKindGoalGroup": {
      "get": {
        "summary": "Obtém todos os grupos de metas de atividades",
        "description": "Endpoint para obter a lista de todos os grupos de metas de atividades.",
        "tags": [
          "Grupos de Metas de Atividades"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de grupos de metas obtida com sucesso"
          },
          "400": {
            "description": "Erro ao obter a lista de grupos de metas"
          }
        }
      },
      "put": {
        "summary": "Cria ou atualiza um grupo de metas de atividades",
        "description": "Endpoint para criar ou atualizar um grupo de metas de atividades.",
        "tags": [
          "Grupos de Metas de Atividades"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "example": {
                  "id": "group_123",
                  "name": "Novo Grupo"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Grupo de metas criado/atualizado com sucesso"
          },
          "400": {
            "description": "Erro ao criar/atualizar o grupo de metas"
          }
        }
      }
    },
    "/activityKindGoalGroup/{id}": {
      "get": {
        "summary": "Obtém um grupo de metas de atividades específico",
        "description": "Endpoint para obter detalhes de um grupo de metas de atividades específico.",
        "tags": [
          "Grupos de Metas de Atividades"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID do grupo de metas de atividades",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do grupo de metas obtidos com sucesso"
          },
          "404": {
            "description": "Grupo de metas não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um grupo de metas de atividades",
        "description": "Endpoint para excluir um grupo de metas de atividades específico.",
        "tags": [
          "Grupos de Metas de Atividades"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID do grupo de metas de atividades",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Grupo de metas excluído com sucesso"
          },
          "404": {
            "description": "Grupo de metas não encontrado"
          }
        }
      }
    },
    "/activityKind/goalsAllowed": {
      "put": {
        "summary": "Atualiza permissões de metas permitidas",
        "description": "Endpoint para atualizar as permissões de metas permitidas para uma atividade.",
        "tags": [
          "Atividades"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedGoals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissões atualizadas com sucesso"
          },
          "400": {
            "description": "Erro ao atualizar permissões"
          }
        }
      }
    },
    "/current/activity": {
      "get": {
        "tags": [
          "Atividades"
        ],
        "summary": "Obtém a atividade atual do usuário",
        "description": "Endpoint para obter a atividade atual de um usuário específico.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Atividade atual obtida com sucesso"
          },
          "404": {
            "description": "Atividade não encontrada"
          }
        }
      }
    },
    "/activity/{activityId}/reachedGoalsByUser/{userId}": {
      "get": {
        "tags": [
          "Atividades"
        ],
        "summary": "Obtém metas alcançadas por um usuário em uma atividade",
        "description": "Endpoint para obter as metas alcançadas por um usuário em uma atividade específica.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activityId",
            "in": "path",
            "description": "ID da atividade",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID do usuário",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Metas alcançadas obtidas com sucesso"
          },
          "404": {
            "description": "Metas não encontradas"
          }
        }
      }
    },
    "/api/checklist-export-pdf": {
      "get": {
        "tags": [
          "Checklist"
        ],
        "summary": "Exporta o checklist em formato PDF",
        "description": "Endpoint para exportar os dados do checklist em formato PDF.",
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "initialDate",
            "in": "query",
            "description": "Data inicial para o filtro do checklist",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "finalDate",
            "in": "query",
            "description": "Data final para o filtro do checklist",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Lista de IDs de usuários para o filtro",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Lista de IDs de empresas para o filtro",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyTypeId",
            "in": "query",
            "description": "Lista de IDs de tipos de empresas para o filtro",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyAggregator",
            "in": "query",
            "description": "Lista de IDs de agregadores de empresas para o filtro",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número máximo de itens a serem retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Ordenação dos itens retornados",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "getPictures",
            "in": "query",
            "description": "Indica se as imagens associadas aos checklists devem ser retornadas",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "activityType",
            "in": "query",
            "description": "Lista de tipos de atividades para o filtro",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist exportado com sucesso em formato PDF",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checklist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "checklistId": {
                            "type": "integer"
                          },
                          "shortName": {
                            "type": "string"
                          },
                          "companyName": {
                            "type": "string"
                          },
                          "companyLogo": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "neighborhood": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          },
                          "taskName": {
                            "type": "string"
                          },
                          "userName": {
                            "type": "string"
                          },
                          "expectedCompletionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "campaignName": {
                            "type": "string"
                          },
                          "userPhoto": {
                            "type": "string"
                          },
                          "cnpj": {
                            "type": "string"
                          },
                          "answers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "url": {
                                  "type": "string"
                                },
                                "tag": {
                                  "type": "string"
                                },
                                "question": {
                                  "type": "string"
                                },
                                "answer": {
                                  "type": "string"
                                },
                                "checklistId": {
                                  "type": "integer"
                                },
                                "timestamp": {
                                  "type": "string",
                                  "format": "date"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida. Algum dos parâmetros está faltando ou é inválido."
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/checklistTemplates": {
      "get": {
        "summary": "Obtém a lista de templates de checklist",
        "description": "Rota para obter a lista de templates de checklist.",
        "tags": [
          "Checklist Templates"
        ],
        "responses": {
          "200": {
            "description": "Lista de templates de checklist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChecklistTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/checklistTemplate/configuration": {
      "get": {
        "summary": "Obtém as pontuações de configuração do template",
        "description": "Rota para obter as pontuações de configuração do template.",
        "tags": [
          "Checklist Templates"
        ],
        "responses": {
          "200": {
            "description": "Dados das pontuações de configuração",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationScore"
                }
              }
            }
          },
          "404": {
            "description": "Configuração não encontrada"
          }
        }
      },
      "put": {
        "summary": "Salva a configuração do template de checklist",
        "description": "Rota para salvar a configuração do template de checklist.",
        "tags": [
          "Checklist Templates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "configurationId": {
                    "type": "string"
                  },
                  "score": {
                    "type": "number"
                  }
                },
                "required": [
                  "configurationId",
                  "score"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Configuração salva com sucesso"
          },
          "400": {
            "description": "Erro ao salvar a configuração"
          }
        }
      }
    },
    "/checklistTemplate/{id}": {
      "get": {
        "summary": "Obtém um template de checklist específico",
        "description": "Rota para obter um template de checklist específico pelo ID.",
        "tags": [
          "Checklist Templates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do template de checklist"
          }
        ],
        "responses": {
          "200": {
            "description": "Template de checklist obtido com sucesso"
          },
          "404": {
            "description": "Template de checklist não encontrado"
          }
        }
      },
      "delete": {
        "summary": "Exclui um template de checklist",
        "description": "Rota para excluir um template de checklist específico pelo ID.",
        "tags": [
          "Checklist Templates"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do template de checklist"
          }
        ],
        "responses": {
          "200": {
            "description": "Template de checklist excluído com sucesso"
          },
          "404": {
            "description": "Template de checklist não encontrado"
          }
        }
      }
    },
    "/checklistTemplate": {
      "put": {
        "summary": "Salva o template de checklist completo",
        "description": "Rota para salvar o template de checklist completo.",
        "tags": [
          "Checklist Templates"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "string"
                  },
                  "templateData": {
                    "type": "object"
                  }
                },
                "required": [
                  "templateId",
                  "templateData"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Template salvo com sucesso"
          },
          "400": {
            "description": "Erro ao salvar o template"
          }
        }
      }
    },
    "/checklist": {
      "get": {
        "summary": "Obtém a lista de checklists",
        "description": "Rota para obter a lista de checklists.",
        "tags": [
          "Checklist"
        ],
        "responses": {
          "200": {
            "description": "Lista de checklists obtida com sucesso"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/checklist/count": {
      "get": {
        "summary": "Obtém a contagem de checklists",
        "description": "Rota para obter a contagem de checklists.",
        "tags": [
          "Checklist"
        ],
        "responses": {
          "200": {
            "description": "Contagem de checklists obtida com sucesso"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/checklist/count/acceptance": {
      "get": {
        "summary": "Obtém a contagem de checklists por status de aceitação",
        "description": "Rota para obter a contagem de checklists por status de aceitação.",
        "tags": [
          "Checklist"
        ],
        "responses": {
          "200": {
            "description": "Contagem de checklists por status de aceitação obtida com sucesso"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/checklist/details": {
      "get": {
        "summary": "Obtém detalhes dos checklists",
        "description": "Rota para obter detalhes dos checklists.",
        "tags": [
          "Checklist"
        ],
        "responses": {
          "200": {
            "description": "Detalhes dos checklists obtidos com sucesso"
          },
          "401": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/checklist/acceptance/{cdUsuario}": {
      "post": {
        "summary": "Salva a aceitação do checklist",
        "description": "Rota para salvar a aceitação do checklist.",
        "tags": [
          "Checklist"
        ],
        "parameters": [
          {
            "name": "cdUsuario",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Código do usuário"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acceptanceStatus": {
                    "type": "string"
                  }
                },
                "required": [
                  "acceptanceStatus"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Aceitação salva com sucesso"
          },
          "400": {
            "description": "Erro ao salvar a aceitação"
          }
        }
      }
    },
    "/checklist/preview/{id}": {
      "get": {
        "summary": "Obtém a pré-visualização do checklist",
        "description": "Rota para obter a pré-visualização do checklist.",
        "tags": [
          "Checklist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do checklist"
          }
        ],
        "responses": {
          "200": {
            "description": "Pré-visualização do checklist obtida com sucesso"
          },
          "404": {
            "description": "Checklist não encontrado"
          }
        }
      }
    },
    "/checklist/filling/{id}": {
      "get": {
        "summary": "Obtém o checklist com respostas",
        "description": "Rota para obter o checklist com respostas.",
        "tags": [
          "Checklist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do checklist"
          }
        ],
        "responses": {
          "200": {
            "description": "Checklist com respostas obtido com sucesso"
          },
          "404": {
            "description": "Checklist não encontrado"
          }
        }
      }
    },
    "/checklist/result/{id}": {
      "get": {
        "summary": "Obtém o resultado do checklist",
        "description": "Rota para obter o resultado do checklist.",
        "tags": [
          "Checklist"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID do checklist"
          }
        ],
        "responses": {
          "200": {
            "description": "Resultado do checklist obtido com sucesso"
          },
          "404": {
            "description": "Checklist não encontrado"
          }
        }
      }
    },
    "/contactClassification": {
      "get": {
        "summary": "Obtém todas as classificações de contato",
        "description": "Rota para obter todas as classificações de contato.",
        "tags": [
          "Classificação de Contato"
        ],
        "responses": {
          "200": {
            "description": "Lista de classificações de contato obtida com sucesso"
          },
          "400": {
            "description": "Erro ao obter a lista de classificações de contato"
          }
        }
      },
      "put": {
        "summary": "Cria ou atualiza uma classificação de contato",
        "description": "Rota para criar ou atualizar uma classificação de contato.",
        "tags": [
          "Classificação de Contato"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classificação de contato criada/atualizada com sucesso"
          },
          "400": {
            "description": "Erro ao criar/atualizar a classificação de contato"
          }
        }
      },
      "delete": {
        "summary": "Exclui uma classificação de contato",
        "description": "Rota para excluir uma classificação de contato.",
        "tags": [
          "Classificação de Contato"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classificação de contato excluída com sucesso"
          },
          "400": {
            "description": "Erro ao excluir a classificação de contato"
          }
        }
      }
    },
    "/contactClassification/{id}": {
      "get": {
        "summary": "Obtém uma classificação de contato específica",
        "description": "Rota para obter uma classificação de contato específica pelo ID.",
        "tags": [
          "Classificação de Contato"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID da classificação de contato"
          }
        ],
        "responses": {
          "200": {
            "description": "Classificação de contato obtida com sucesso"
          },
          "404": {
            "description": "Classificação de contato não encontrada"
          }
        }
      }
    },
    "/products/import": {
      "post": {
        "summary": "Importa produtos a partir de um arquivo Excel",
        "description": "Rota para importar produtos a partir de um arquivo Excel.",
        "tags": [
          "Produtos"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Produtos importados com sucesso"
          },
          "400": {
            "description": "Erro ao importar produtos"
          }
        }
      }
    },
    "/logo": {
      "get": {
        "summary": "Obtém o logo único",
        "description": "Rota para obter o logo único.",
        "tags": [
          "Logo"
        ],
        "responses": {
          "200": {
            "description": "Logo obtido com sucesso"
          },
          "404": {
            "description": "Logo não encontrado"
          }
        }
      }
    },
    "/logo/update": {
      "put": {
        "summary": "Atualiza o logo único",
        "description": "Rota para atualizar o logo único.",
        "tags": [
          "Logo"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "logoUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "logoUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logo atualizado com sucesso"
          },
          "400": {
            "description": "Erro ao atualizar o logo"
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "Obtém perfis",
        "description": "Rota para obter perfis do sistema.",
        "tags": [
          "Perfis"
        ],
        "responses": {
          "200": {
            "description": "Perfis obtidos com sucesso"
          },
          "404": {
            "description": "Perfis não encontrados"
          }
        }
      },
      "patch": {
        "summary": "Atualiza informações do perfil",
        "description": "Esta rota permite a atualização das informações de um perfil no sistema.",
        "tags": [
          "Perfis"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do perfil"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email do perfil"
                  },
                  "age": {
                    "type": "integer",
                    "description": "Idade do perfil"
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Informações do perfil atualizadas com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/profile/goalsAllowedPermission": {
      "put": {
        "summary": "Atualiza permissões de metas permitidas para perfis",
        "description": "Rota para atualizar permissões de metas permitidas para perfis.",
        "tags": [
          "Perfis"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowedGoals": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permissões atualizadas com sucesso"
          },
          "400": {
            "description": "Erro ao atualizar permissões"
          }
        }
      }
    },
    "/ticket/download": {
      "get": {
        "summary": "Gera e baixa o PDF do ticket",
        "description": "Rota para gerar e baixar o PDF do ticket.",
        "tags": [
          "Ticket"
        ],
        "responses": {
          "200": {
            "description": "PDF do ticket gerado com sucesso"
          },
          "400": {
            "description": "Erro ao gerar o PDF do ticket"
          }
        }
      }
    },
    "/user/hierarchy": {
      "get": {
        "summary": "Obtém a hierarquia de usuários",
        "description": "Rota para obter a hierarquia de usuários.",
        "tags": [
          "Usuários"
        ],
        "responses": {
          "200": {
            "description": "Hierarquia de usuários obtida com sucesso"
          },
          "404": {
            "description": "Hierarquia de usuários não encontrada"
          }
        }
      }
    },
    "/workingJourney": {
      "delete": {
        "summary": "Exclui uma jornada de trabalho",
        "description": "Rota para excluir uma jornada de trabalho.",
        "tags": [
          "Jornada de Trabalho"
        ],
        "responses": {
          "200": {
            "description": "Jornada de trabalho excluída com sucesso"
          },
          "400": {
            "description": "Erro ao excluir a jornada de trabalho"
          }
        }
      }
    },
    "/workingJourney/moveProfiles": {
      "put": {
        "summary": "Move perfis para uma nova jornada de trabalho",
        "description": "Rota para mover perfis para uma nova jornada de trabalho.",
        "tags": [
          "Jornada de Trabalho"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "profileIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "newJourneyId": {
                    "type": "string"
                  }
                },
                "required": [
                  "profileIds",
                  "newJourneyId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Perfis movidos com sucesso"
          },
          "400": {
            "description": "Erro ao mover perfis"
          }
        }
      }
    },
    "/orderEvolution": {
      "get": {
        "summary": "Obtém a evolução dos pedidos",
        "description": "Rota para obter a evolução dos pedidos.",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Evolução dos pedidos obtida com sucesso"
          },
          "404": {
            "description": "Evolução dos pedidos não encontrada"
          }
        }
      }
    },
    "/infoOrder": {
      "get": {
        "summary": "Obtém informações do pedido",
        "description": "Rota para obter informações detalhadas de um pedido.",
        "tags": [
          "Pedidos"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Informações do pedido obtidas com sucesso"
          },
          "404": {
            "description": "Pedido não encontrado"
          }
        }
      }
    },
    "/rankingProduct": {
      "get": {
        "summary": "Obtém o ranking de produtos",
        "description": "Rota para obter o ranking de produtos.",
        "tags": [
          "Produtos"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ranking de produtos obtido com sucesso"
          },
          "404": {
            "description": "Ranking de produtos não encontrado"
          }
        }
      }
    },
    "/rankingClient": {
      "get": {
        "summary": "Obtém o ranking de clientes",
        "description": "Rota para obter o ranking de clientes.",
        "tags": [
          "Clientes"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ranking de clientes obtido com sucesso"
          },
          "404": {
            "description": "Ranking de clientes não encontrado"
          }
        }
      }
    },
    "/rankingFamily": {
      "get": {
        "summary": "Obtém o ranking de famílias de produtos",
        "description": "Rota para obter o ranking de famílias de produtos.",
        "tags": [
          "Famílias de Produtos"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "header",
            "description": "Chave de autenticação do tenant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ranking de famílias de produtos obtido com sucesso"
          },
          "404": {
            "description": "Ranking de famílias de produtos não encontrado"
          }
        }
      }
    },
    "/checklistTemplate/strategicActions/{id}": {
      "get": {
        "summary": "Obtém as ações estratégicas de um template de checklist",
        "description": "Retorna as ações estratégicas associadas a um template de checklist específico",
        "tags": [
          "Templates de Checklist"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID do template de checklist",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ações estratégicas obtidas com sucesso"
          },
          "404": {
            "description": "Template não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/checklistTemplate/strategicActions": {
      "put": {
        "summary": "Salva as ações estratégicas de um template de checklist",
        "description": "Atualiza ou cria as ações estratégicas associadas a um template de checklist",
        "tags": [
          "Templates de Checklist"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "templateId": {
                    "type": "string",
                    "description": "ID do template de checklist"
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actionId": {
                          "type": "string",
                          "description": "ID da ação estratégica"
                        },
                        "description": {
                          "type": "string",
                          "description": "Descrição da ação estratégica"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "templateId",
                  "actions"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ações estratégicas salvas com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "summary": "Obtém a lista de empresas",
        "description": "Retorna a lista completa de empresas cadastradas no sistema",
        "tags": [
          "Empresas"
        ],
        "responses": {
          "200": {
            "description": "Lista de empresas obtida com sucesso"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/companies/geolocation": {
      "get": {
        "summary": "Obtém empresas com geolocalização pendente",
        "description": "Retorna a lista de empresas que precisam de atualização de geolocalização",
        "tags": [
          "Empresas"
        ],
        "responses": {
          "200": {
            "description": "Lista de empresas obtida com sucesso"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      },
      "post": {
        "summary": "Atualiza geolocalização de empresas",
        "description": "Atualiza as informações de geolocalização das empresas pendentes",
        "tags": [
          "Empresas"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "companyId": {
                    "type": "string",
                    "description": "ID da empresa"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude da nova localização"
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude da nova localização"
                  }
                },
                "required": [
                  "companyId",
                  "latitude",
                  "longitude"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Geolocalização atualizada com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/companies/contacts/{id}": {
      "delete": {
        "summary": "Remove um contato de empresa",
        "description": "Endpoint para remover um contato específico de uma empresa",
        "tags": [
          "Contatos"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID do contato a ser removido",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contato removido com sucesso"
          },
          "404": {
            "description": "Contato não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/indicators/dashboard": {
      "get": {
        "summary": "Obtém dados do dashboard de indicadores",
        "description": "Retorna os dados principais para exibição no dashboard de indicadores",
        "tags": [
          "Indicadores"
        ],
        "responses": {
          "200": {
            "description": "Dados do dashboard obtidos com sucesso"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/selling-campaign": {
      "get": {
        "summary": "Obtém a lista de campanhas de vendas",
        "description": "Retorna a lista de todas as campanhas de vendas ativas no sistema",
        "tags": [
          "Campanhas de Vendas"
        ],
        "responses": {
          "200": {
            "description": "Lista de campanhas obtida com sucesso"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/ticketsClassifications/{classificationOptionId}/orderTicket/{ticketId}": {
      "put": {
        "summary": "Atualiza a ordem de uma classificação de ticket",
        "description": "Endpoint para atualizar a ordem de uma classificação de ticket específica",
        "tags": [
          "Classificações de Tickets"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "classificationOptionId",
            "required": true,
            "description": "ID da opção de classificação",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "ticketId",
            "required": true,
            "description": "ID do ticket",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "newOrderPosition"
                ],
                "properties": {
                  "newOrderPosition": {
                    "type": "integer",
                    "description": "The new position for the ticket classification",
                    "example": 2
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ordem atualizada com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/tickets-by-classifications/{id}": {
      "get": {
        "summary": "Obtém tickets por opção de classificação",
        "description": "Retorna a lista de tickets associados a uma opção de classificação específica",
        "tags": [
          "Tickets"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID da opção de classificação",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de tickets obtida com sucesso"
          },
          "404": {
            "description": "Opção de classificação não encontrada"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/user-login": {
      "get": {
        "summary": "Obtém informações de login do usuário",
        "description": "Esta rota retorna as informações de login de um usuário específico.",
        "tags": [
          "Login"
        ],
        "responses": {
          "200": {
            "description": "Informações de login obtidas com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/user/{id}/remotenesses": {
      "get": {
        "tags": [
          "Usuários"
        ],
        "summary": "Obtém configurações de remoteness do usuário por ID",
        "description": "Retorna as configurações de trabalho remoto de um usuário específico",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "description": "ID numérico do usuário",
            "schema": {
              "type": "integer",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados de remoteness do usuário",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "userId": {
                      "type": "integer",
                      "example": 123
                    },
                    "isRemote": {
                      "type": "boolean",
                      "example": true
                    },
                    "frequency": {
                      "type": "string",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ],
                      "example": "weekly"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-01-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/users/remotenesses": {
      "get": {
        "summary": "Obtém configurações de remoteness dos usuários",
        "description": "Retorna as configurações de trabalho remoto de todos os usuários",
        "tags": [
          "Usuários"
        ],
        "responses": {
          "200": {
            "description": "Lista de configurações de remoteness",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRemoteness"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/parent": {
      "put": {
        "summary": "Atualiza relacionamento parental do usuário",
        "description": "Esta rota permite atualizar o relacionamento parental de um usuário",
        "tags": [
          "Usuários"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "description": "ID do usuário"
                  },
                  "parentId": {
                    "type": "string",
                    "description": "ID do usuário pai"
                  }
                },
                "required": [
                  "userId",
                  "parentId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Relacionamento parental atualizado com sucesso"
          }
        }
      }
    },
    "/user": {
      "patch": {
        "summary": "Atualiza informações do usuário pai",
        "description": "Esta rota permite a atualização das informações de um usuário pai no sistema.",
        "tags": [
          "Usuários"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Nome do usuário"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email do usuário"
                  },
                  "age": {
                    "type": "integer",
                    "description": "Idade do usuário"
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Informações do usuário atualizadas com sucesso"
          },
          "400": {
            "description": "Requisição inválida"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    },
    "/whitelabel/{customerId}": {
      "get": {
        "summary": "Obtém o whitelabel padrão para um cliente",
        "description": "Retorna as configurações de whitelabel padrão para um cliente específico",
        "tags": [
          "Whitelabel"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "customerId",
            "required": true,
            "description": "ID do cliente",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Configurações de whitelabel obtidas com sucesso"
          },
          "404": {
            "description": "Cliente não encontrado"
          },
          "500": {
            "description": "Erro interno do servidor"
          }
        }
      }
    }
  },
  "components": {

  }
}